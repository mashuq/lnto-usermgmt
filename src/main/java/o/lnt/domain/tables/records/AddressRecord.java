/*
 * This file is generated by jOOQ.
 */
package o.lnt.domain.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import o.lnt.domain.tables.Address;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Record2;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record13<Integer, String, Integer, Byte, String, String, String, String, String, String, String, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 100084227;

    /**
     * Setter for <code>address.AddressID</code>.
     */
    public void setAddressid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>address.AddressID</code>.
     */
    public Integer getAddressid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>address.AddressType</code>.
     */
    public void setAddresstype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>address.AddressType</code>.
     */
    public String getAddresstype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>address.PersonID</code>.
     */
    public void setPersonid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>address.PersonID</code>.
     */
    public Integer getPersonid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>address.Default</code>.
     */
    public void setDefault(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>address.Default</code>.
     */
    public Byte getDefault() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>address.Country</code>.
     */
    public void setCountry(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>address.Country</code>.
     */
    public String getCountry() {
        return (String) get(4);
    }

    /**
     * Setter for <code>address.ZipPostCode</code>.
     */
    public void setZippostcode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>address.ZipPostCode</code>.
     */
    public String getZippostcode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>address.ProvinceStateCounty</code>.
     */
    public void setProvincestatecounty(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>address.ProvinceStateCounty</code>.
     */
    public String getProvincestatecounty() {
        return (String) get(6);
    }

    /**
     * Setter for <code>address.CityTownVillage</code>.
     */
    public void setCitytownvillage(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>address.CityTownVillage</code>.
     */
    public String getCitytownvillage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>address.StreetRoadBlock</code>.
     */
    public void setStreetroadblock(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>address.StreetRoadBlock</code>.
     */
    public String getStreetroadblock() {
        return (String) get(8);
    }

    /**
     * Setter for <code>address.HouseBuilding</code>.
     */
    public void setHousebuilding(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>address.HouseBuilding</code>.
     */
    public String getHousebuilding() {
        return (String) get(9);
    }

    /**
     * Setter for <code>address.Other</code>.
     */
    public void setOther(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>address.Other</code>.
     */
    public String getOther() {
        return (String) get(10);
    }

    /**
     * Setter for <code>address.Longitude</code>.
     */
    public void setLongitude(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>address.Longitude</code>.
     */
    public BigDecimal getLongitude() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>address.Latitude</code>.
     */
    public void setLatitude(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>address.Latitude</code>.
     */
    public BigDecimal getLatitude() {
        return (BigDecimal) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Integer, Byte, String, String, String, String, String, String, String, BigDecimal, BigDecimal> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Integer, Byte, String, String, String, String, String, String, String, BigDecimal, BigDecimal> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Address.ADDRESS.ADDRESSID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Address.ADDRESS.ADDRESSTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Address.ADDRESS.PERSONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Address.ADDRESS.DEFAULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Address.ADDRESS.COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Address.ADDRESS.ZIPPOSTCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Address.ADDRESS.PROVINCESTATECOUNTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Address.ADDRESS.CITYTOWNVILLAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Address.ADDRESS.STREETROADBLOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Address.ADDRESS.HOUSEBUILDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Address.ADDRESS.OTHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field12() {
        return Address.ADDRESS.LONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field13() {
        return Address.ADDRESS.LATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAddressid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAddresstype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getDefault();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getZippostcode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getProvincestatecounty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getCitytownvillage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getStreetroadblock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getHousebuilding();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getOther();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component12() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component13() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAddressid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAddresstype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getDefault();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getZippostcode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getProvincestatecounty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCitytownvillage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getStreetroadblock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getHousebuilding();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getOther();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value12() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value13() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value1(Integer value) {
        setAddressid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value2(String value) {
        setAddresstype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value3(Integer value) {
        setPersonid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value4(Byte value) {
        setDefault(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value5(String value) {
        setCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value6(String value) {
        setZippostcode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value7(String value) {
        setProvincestatecounty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value8(String value) {
        setCitytownvillage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value9(String value) {
        setStreetroadblock(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value10(String value) {
        setHousebuilding(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value11(String value) {
        setOther(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value12(BigDecimal value) {
        setLongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord value13(BigDecimal value) {
        setLatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressRecord values(Integer value1, String value2, Integer value3, Byte value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, BigDecimal value12, BigDecimal value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(Integer addressid, String addresstype, Integer personid, Byte default_, String country, String zippostcode, String provincestatecounty, String citytownvillage, String streetroadblock, String housebuilding, String other, BigDecimal longitude, BigDecimal latitude) {
        super(Address.ADDRESS);

        set(0, addressid);
        set(1, addresstype);
        set(2, personid);
        set(3, default_);
        set(4, country);
        set(5, zippostcode);
        set(6, provincestatecounty);
        set(7, citytownvillage);
        set(8, streetroadblock);
        set(9, housebuilding);
        set(10, other);
        set(11, longitude);
        set(12, latitude);
    }
}
